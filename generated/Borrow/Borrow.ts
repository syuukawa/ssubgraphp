// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BorrowAndTrade extends ethereum.Event {
  get params(): BorrowAndTrade__Params {
    return new BorrowAndTrade__Params(this);
  }
}

export class BorrowAndTrade__Params {
  _event: BorrowAndTrade;

  constructor(event: BorrowAndTrade) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get slippage(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class CreateOrder extends ethereum.Event {
  get params(): CreateOrder__Params {
    return new CreateOrder__Params(this);
  }
}

export class CreateOrder__Params {
  _event: CreateOrder;

  constructor(event: CreateOrder) {
    this._event = event;
  }

  get tokenPairs(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get orderType(): string {
    return this._event.parameters[1].value.toString();
  }

  get direction(): string {
    return this._event.parameters[2].value.toString();
  }

  get pay(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get borrow(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get status(): string {
    return this._event.parameters[5].value.toString();
  }
}

export class Borrow extends ethereum.SmartContract {
  static bind(address: Address): Borrow {
    return new Borrow("Borrow", address);
  }
}

export class BorrowCall extends ethereum.Call {
  get inputs(): BorrowCall__Inputs {
    return new BorrowCall__Inputs(this);
  }

  get outputs(): BorrowCall__Outputs {
    return new BorrowCall__Outputs(this);
  }
}

export class BorrowCall__Inputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }
}

export class BorrowCall__Outputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }
}

export class OrderCall extends ethereum.Call {
  get inputs(): OrderCall__Inputs {
    return new OrderCall__Inputs(this);
  }

  get outputs(): OrderCall__Outputs {
    return new OrderCall__Outputs(this);
  }
}

export class OrderCall__Inputs {
  _call: OrderCall;

  constructor(call: OrderCall) {
    this._call = call;
  }

  get tokenPairs(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get orderType(): string {
    return this._call.inputValues[1].value.toString();
  }

  get direction(): string {
    return this._call.inputValues[2].value.toString();
  }

  get pay(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get borrow(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get status(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class OrderCall__Outputs {
  _call: OrderCall;

  constructor(call: OrderCall) {
    this._call = call;
  }
}
